- content_for :title, @app.name
- content_for :head do
  = auto_discovery_link_tag :atom, app_url(@app, User.token_authentication_key => current_user.authentication_token, :format => "atom"), :title => "Errbit notices for #{@app.name} at #{root_url}"
- content_for :meta do
  %strong Errs Caught:
  = @app.problems.count
  %strong Deploy Count:
  = @app.deploys.count
  %strong API Key:
  = @app.api_key
- content_for :action_bar do
  - if current_user.admin?
    = link_to 'edit', edit_app_path(@app), :class => 'button'
    = link_to 'destroy', app_path(@app), :method => :delete, :confirm => 'Seriously?', :class => 'button'

%h3 Watchers
%table.watchers
  %thead
    %tr
      %th User or Email
  %tbody
    - @app.watchers.each do |watcher|
      %tr
        %td= watcher.label
    - if @app.watchers.none?
      %tr
        %td
          %em Sadly, no one is watching this app

%h3 Latest Deploys
- if @deploys.any?
  %table.deploys
    %thead
      %tr
        %th When
        %th Who
        %th Message
        %th Repository
        %th Revision

    %tbody
      - @deploys.each do |deploy|
        %tr
          %td.when #{deploy.created_at.to_s(:micro)}
          %td.who #{deploy.username}
          %td.message #{deploy.message}
          %td.repository #{deploy.repository}
          %td.revision #{deploy.revision}
  = link_to "All Deploys (#{@app.deploys.count})", app_deploys_path(@app), :class => 'button'
- else
  %h3 No deploys

- if @app.problems.any?
  %h3.clear Errs
  = render 'errs/table', :errs => @errs
- else
  %h3.clear No errs have been caught yet, make sure you setup your app
  = render 'configuration_instructions', :app => @app
