- content_for :page_title, @problem.message
- content_for :title, @problem.klass
- content_for :meta do
  %strong App:
  = link_to @app.name, app_path(@app)
  %strong Where:
  = @problem.where
  %br
  %strong Environment:
  = @problem.environment
  %strong Last Notice:
  = last_notice_at(@problem).to_s(:micro)
- content_for :action_bar do
  - if current_user.authentication_token
    %span= link_to 'iCal', app_err_path(:app_id => @app.id, :id => @problem.id, :format => "ics", :auth_token => current_user.authentication_token), :class => "calendar_link"
  - if @problem.app.issue_tracker_configured?
    - if @problem.issue_link.blank?
      %span= link_to 'create issue', create_issue_app_err_path(@app, @problem), :method => :post, :class => "#{@app.issue_tracker.class::Label}_create create-issue"
    - else
      %span= link_to 'go to issue', @problem.issue_link, :class => "#{@app.issue_tracker.class::Label}_goto goto-issue"
      = link_to 'unlink issue', unlink_issue_app_err_path(@app, @problem), :method => :delete, :confirm => "Unlink err issues?", :class => "unlink-issue"
  - if @problem.unresolved?
    %span= link_to 'resolve', resolve_app_err_path(@app, @problem), :method => :put, :confirm => err_confirm, :class => 'resolve'

- if Errbit::Config.allow_comments_with_issue_tracker || !@app.issue_tracker_configured? || @problem.comments.any?
  - content_for :comments do
    %h3 Comments
    - @problem.comments.each do |comment|
      .window
        %table.comment
          %tr
            %th
              %span= link_to '&#10008;'.html_safe, destroy_comment_app_err_path(@app, @problem) << "?comment_id=#{comment.id}", :method => :delete, :confirm => "Are sure you don't need this comment?", :class => "destroy-comment"
              = time_ago_in_words(comment.created_at, true) << " ago by "
              = link_to comment.user.email, user_path(comment.user)
          %tr
            %td= comment.body.gsub("\n", "<br>").html_safe
    - if Errbit::Config.allow_comments_with_issue_tracker || !@app.issue_tracker_configured?
      = form_for @comment, :url => create_comment_app_err_path(@app, @problem) do |comment_form|
        %p Add a comment
        = comment_form.text_area :body, :style => "width: 420px; height: 80px;"
        = comment_form.submit "Save Comment"

%h4= @notice.try(:message)

= paginate @notices, :param_name => :notice, :theme => :notices

.tab-bar
  %ul
    %li= link_to 'Summary', '#summary', :rel => 'summary', :class => 'button'
    %li= link_to 'Backtrace', '#backtrace', :rel => 'backtrace', :class => 'button'
    %li= link_to 'Environment', '#environment', :rel => 'environment', :class => 'button'
    %li= link_to 'Parameters', '#params', :rel => 'params', :class => 'button'
    %li= link_to 'Session', '#session', :rel => 'session', :class => 'button'

- if @notice
  #summary
    %h3 Summary
    = render 'notices/summary', :notice => @notice, :problem => @problem

  #backtrace
    %h3 Backtrace
    = render 'notices/backtrace', :lines => @notice.backtrace

  #environment
    %h3 Environment
    = render 'notices/environment', :notice => @notice

  #params
    %h3 Parameters
    = render 'notices/params', :notice => @notice

  #session
    %h3 Session
    = render 'notices/session', :notice => @notice

